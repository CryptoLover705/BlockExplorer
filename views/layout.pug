doctype html
html
  head
    title= settings.title
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='stylesheet', href='/themes/' + settings.theme + '/bootstrap.min.css')
    link(rel='stylesheet', href='/vendor/jqplot/jquery.jqplot.css')
    link(rel='stylesheet', href='//cdn.datatables.net/plug-ins/725b2a2115b/integration/bootstrap/3/dataTables.bootstrap.css')
    link(rel='stylesheet', href='//maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css')
    link(rel='stylesheet', href='//fonts.googleapis.com/css?family=Roboto+Mono|Roboto')
    link(rel='stylesheet', href='/stylesheets/style.css')
    script(src='https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js')
    script(src='//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js')
    script(src='/vendor/jqplot/jquery.jqplot.min.js')
    script(src='/vendor/jqplot/plugins/jqplot.dateAxisRenderer.min.js')
    script(src='/vendor/jqplot/plugins/jqplot.ohlcRenderer.min.js')
    script(src='/vendor/jqplot/plugins/jqplot.highlighter.min.js')
    script(src='/vendor/jqplot/plugins/jqplot.pieRenderer.min.js')
    script(src='/vendor/jqplot/plugins/jqplot.barRenderer.min.js')
    script(src='/vendor/jqplot/plugins/jqplot.categoryAxisRenderer.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.9.0/moment.min.js')
    script(src='//cdn.datatables.net/1.10.2/js/jquery.dataTables.min.js')  
    script(src='//cdn.datatables.net/responsive/1.0.1/js/dataTables.responsive.js')
    script(src='//cdn.datatables.net/plug-ins/725b2a2115b/integration/bootstrap/3/dataTables.bootstrap.js')
    script(src='/javascripts/chart.js')
    script(src='/javascripts/analytics.js')
    script.
      $(document).ready(function(){
        $('##{active}').addClass('active');
        function update_stats(){   
          $.ajax({url: '/ext/summary', success: function(json){
            $("#supply").text(json.data[0].supply);
            $("#difficulty").text(json.data[0].difficulty);
            $("#masternodeCount").text(json.data[0].masternodeCount);
            $("#masternodeOnlineCount").text(json.data[0].masternodeOnlineCount);
            $("#difficultyHybrid").text(json.data[0].difficultyHybrid);
            $("#hashrate").text(json.data[0].hashrate);
            $("#price_btc").text(json.data[0].lastPriceBtc);
            $("#lblX1").text(' ');
            $("#price_usd").text(json.data[0].lastPriceUsd);
            $("#cmc_market_cap").text(json.data[0].marketCapUsd);
            $("#cmc_volume_24h").text(json.data[0].marketVolumeUsd);

            $("#lblConnections").text(json.data[0].connections + ' connections');
            $("#lblBlockcountValue").text(json.data[0].blockcount);


            if (json.data[0].cmc) {
              if (json.data[0].cmc.percent_change_24h) {
                $("#price_percent_change_value").text(json.data[0].cmc.percent_change_24h);
                if (json.data[0].cmc.percent_change_24h.substr(0, 1) === '-')
                  $("#price_percent_change").attr('class', 'text-danger');
                else
                  $("#price_percent_change").attr('class', 'text-success');
              }
              if (json.data[0].cmc.rank)
                $("#cmc_rank").text(json.data[0].cmc.rank);
            }
          }});
        }
        $('.block-last-next').tooltip({
          animation: true,
          delay: { hide: 500 },   
        });
        $('.history-table').dataTable( {        
          searching: false,
          ordering: false,
          responsive: true
        });
        $('.iquidus').css('color',$('.table').css('color'));
        $(window).resize(function () { 
          $($.fn.dataTable.tables( true ) ).DataTable().columns.adjust();
        });
        setInterval( function() {
          update_stats();
        }, 60000);
        update_stats();
      });
  body
    - function format_unixtime(unixtime) {
      - var a = new Date(unixtime*1000);  
      - var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];
      - var year = a.getFullYear();
      - var month = months[a.getMonth()];
      - var date = a.getDate();
      - var hour = a.getHours();
      - var min = a.getMinutes();
      - var sec = a.getSeconds();
      - var suffix = 'th'
      if date == 1 || date == 21 || date == 31
        - suffix = 'st'
      if date == 2 || date == 22 || date == 32
        - suffix = 'nd'
      if date == 3 || date == 23
        - suffix = 'rd'
      if hour < 10
        - hour = '0' + hour
      if min < 10
        - min = '0' + min
      if sec < 10
        - sec = '0' + sec
      - var time = date + suffix + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;   
      - return time
    -  };
    .nav.navbar.navbar-default.navbar-fixed-top(role='navigation')
      .container-fluid
        .navbar-header
          button.navbar-toggle(type='button', data-toggle='collapse', data-target='#navbar-collapse')
            span.sr-only Toggle navigation
            span.icon-bar
            span.icon-bar
            span.icon-bar
          a.navbar-brand(href='/') #{settings.title}
        .collapse.navbar-collapse(id='navbar-collapse')
          ul.nav.navbar-nav
            li#home
              a.navbar-link(href='/') 
                span.glyphicon.glyphicon-search
                span.menu-text #{settings.locale.menu_explorer}
            if settings.heavy == true
              li#reward
                a.navbar-link(href='/reward')
                  span.fa.fa-star
                  span.menu-text #{settings.locale.menu_reward}
            if settings.display.movement == true
              li#movement 
                a.navbar-link.loading(href='/movement') 
                  span.fa.fa-money
                  span.menu-text #{settings.locale.menu_movement}
            if settings.display.network == true
              li#network
                a.navbar-link(href='/network')
                  span.fa.fa-wifi
                  span.menu-text #{settings.locale.menu_network}
            if settings.display.richlist == true
              li#richlist
                a.navbar-link(href='/richlist')
                  span.fa.fa-btc
                  span.menu-text #{settings.locale.menu_richlist}
            if settings.display.markets == true
              li#markets
                a.navbar-link.loading(href='/markets/' + settings.markets.default) 
                  span.fa.fa-line-chart
                  span.menu-text #{settings.locale.menu_markets}
            if settings.display.masternodes == true
              li#masternodes
                a.navbar-link.loading(href='/masternodes')
                  span.fa.fa-server
                  span.menu-text #{settings.locale.menu_masternodes}
            if settings.display.coininfo == true
              li#coininfo
                a.navbar-link.loading(href='/coininfo')
                  span.fa.fa-vcard-o
                  span.menu-text #{settings.locale.menu_coininfo}
            if settings.display.api == true
              li#info
                a.navbar-link(href='/info')
                  span.glyphicon.glyphicon-info-sign
                  span.menu-text #{settings.locale.menu_api}
          ul.nav.nav-bar.navbar-right
            img(src=settings.logo, style='margin-top:4px;height:40px;')

    .col-md-12
      .row
        if settings.display.masternodes == false
          .col-lg-1.col-md-2
        if settings.display.coinmarketcap == true
          .col-lg-6.col-md-7.col-sm-12
            .panel.panel-primary.panel-summary
              .panel-heading.text-center
                span #{settings.locale.ex_market}
              .panel-body
                row.text-center

                  .col-sm-6
                    row.text-center
                      .col-sm-12
                        label#price_usd
                        =" USD"
                    row.text-center
                      .col-sm-12
                        small
                          span#price_btc 
                          =" BTC"
                          span#price_percent_change
                            =" ("
                            label#price_percent_change_value
                            ="%)"

                  .col-sm-6
                    row.text-center
                      .col-sm-12
                        span.text-left
                          span #{settings.locale.ex_marketcap}
                          label#cmc_market_cap -
                          =" USD"
                    row.text-center
                      .col-sm-12
                        span.text-left
                          span #{settings.locale.ex_24hvolume}
                          label#cmc_volume_24h -
                          =" USD"
        else
          .col-lg-3.col-md-0

        if settings.index.show_coin_supply
          - supplyPanelSize = settings.display.coinmarketcap == true ? "col-lg-2 col-md-2 col-sm-4" : "col-lg-2 col-md-2 col-sm-4"
          div(class=supplyPanelSize)
            .panel.panel-primary.panel-summary
              .panel-heading.text-center
                span #{settings.locale.ex_supply}
              .panel-body(style="padding-top: 35px")
                row.text-center
                  .col-md-12
                    label#supply -

        if settings.index.show_hashrate
          .col-lg-2.col-md-3.col-sm-4
            .panel.panel-primary.panel-summary
              .panel-heading.text-center
                span #{settings.locale.network}
              .panel-body(style="padding-top: 25px")
                row.text-center
                  .col-sm-12
                      if settings.index.difficulty == 'Hybrid'
                        label#hashrate -
                        label#lblX1
                      else
                        label#hashrate -
                      if settings.nethash_units == 'K'
                        =" (KH/s)"
                      else if settings.nethash_units == 'M'
                        =" (MH/s)"
                      else if settings.nethash_units == 'G'
                        =" (GH/s)"
                      else if settings.nethash_units == 'T'
                        =" (TH/s)"
                      else if settings.nethash_units == 'P'
                        =" (PH/s)"
                      else if settings.nethash_units == 'H'
                        =" (H/s)"
                row.text-center
                  .col-sm-12
                    small #{settings.locale.difficulty}:
                      if settings.index.difficulty == 'Hybrid'
                        label#difficulty -
                        label#difficultyHybrid -
                      else
                        label#difficulty -

        if settings.display.masternodes == true
          .col-lg-2.hidden-md.col-sm-4
            .panel.panel-primary.panel-summary
              .panel-heading.text-center
                span #{settings.locale.masternodes}
              .panel-body(style="padding-top: 25px")
                row.text-center
                  .col-sm-12
                    label#masternodeCount
                row.text-center
                  .col-sm-12
                    small ENABLED:
                      label#masternodeOnlineCount

    .col-md-12
      .row.text-center(style='margin-top:10px;margin-bottom:20px;')
        form.form-inline(method='post', action='/search')      
          #index-search.form-group
            - searchPlaceholder = (settings.baseType === 'ripple') ? settings.locale.ex_search_message_ripple : settings.locale.ex_search_message;
            input.form-control(type='text', name='search', placeholder=`${searchPlaceholder}`, style='min-width:80%;margin-right:5px;')
            button.btn.btn-success(type='submit') #{settings.locale.ex_search_button}
    block content
    .navbar.navbar-default.navbar-fixed-bottom.hidden-xs
      .col-md-4
        ul.nav
          li
            p(style='margin-top:15px;') 
              a.navbar-link(href='https://github.com/Znuff/cryptocurrency-explorer/', target='_blank') Powered by a customized Iquidus Explorer 
   
      span.connections
        label#lblBlockcount.label.label-default
          span#lblBlockcountValue -
          if settings.baseType === 'ripple'
            span  ledgers
          else
            span  blocks
        label#lblConnections.label.label-default -
